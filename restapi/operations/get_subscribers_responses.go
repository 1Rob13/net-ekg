// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/1Rob13/net-ekg/models"
)

// GetSubscribersOKCode is the HTTP code returned for type GetSubscribersOK
const GetSubscribersOKCode int = 200

/*
GetSubscribersOK User registration successful

swagger:response getSubscribersOK
*/
type GetSubscribersOK struct {

	/*
	  In: Body
	*/
	Payload models.UserArray `json:"body,omitempty"`
}

// NewGetSubscribersOK creates GetSubscribersOK with default headers values
func NewGetSubscribersOK() *GetSubscribersOK {

	return &GetSubscribersOK{}
}

// WithPayload adds the payload to the get subscribers o k response
func (o *GetSubscribersOK) WithPayload(payload models.UserArray) *GetSubscribersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get subscribers o k response
func (o *GetSubscribersOK) SetPayload(payload models.UserArray) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSubscribersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.UserArray{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetSubscribersBadRequestCode is the HTTP code returned for type GetSubscribersBadRequest
const GetSubscribersBadRequestCode int = 400

/*
GetSubscribersBadRequest Invalid request payload

swagger:response getSubscribersBadRequest
*/
type GetSubscribersBadRequest struct {
}

// NewGetSubscribersBadRequest creates GetSubscribersBadRequest with default headers values
func NewGetSubscribersBadRequest() *GetSubscribersBadRequest {

	return &GetSubscribersBadRequest{}
}

// WriteResponse to the client
func (o *GetSubscribersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
